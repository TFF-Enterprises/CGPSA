# $Id$

# CGPSA - A Spam Filter for CommuniGate Pro - Version 1.2.8
# Copyright (C) 2002-2004 TFF Enterprises
# Written by Daniel M. Zimmerman
# All Rights Reserved

# This is an example of a configuration file for the filter. The various
# configuration options are explained, and their default values are
# provided. To change a configuration option, uncomment the corresponding
# line of the configuration file and modify it as you see fit.
#
# This file must be installed as "/var/CommuniGate/Settings/cgpsa.conf", 
# unless you have changed the definitions of $cgp_base, $config_directory, 
# or $config_pathname in the cgpsa filter itself. The filter will not run if 
# it cannot find its configuration file. More accurately, it will run, but 
# it just won't process any mail (and mail will just build up in the queue).
#
# Boolean options (such as "debug") understand "yes", "on", "true", "1" as
# "true" and the obvious alternatives as "false".

#
# Options You Will Almost Certainly Want To Change
# (if you're going to turn CLI usage off, you can ignore these)
#

# The CommuniGate Pro username to use for CLI access. This user must have
# at least the "Can Modify All Domains and Account Settings" access right,
# and it is highly recommended that the user have only the "PWD" service
# enabled (so as to minimize the possibility of security issues).
#
# cgp_username = username

# The password for the username specified in "cgp_username". This is plain
# text, but it's hidden inside /var/CommuniGate (just like all your users'
# email and account settings, which are also in plain text). If somebody
# gets access to your email server using this, you likely have larger
# problems to worry about. 
#
# cgp_password = password


#
# Options You Might Want To Change
#

# A flag that determines whether or not the filter tries to handle multiple
# requests simultaneously. Simultaneous handling of requests may not work on
# all platforms with the current implementation, and is known not to work
# with ActiveState Perl 5.6.1 on Win32. It is disabled by default on
# Windows, and enabled by default on all other platforms. It is highly
# recommended that you run with parallel_requests on if they work on your 
# platform, because it prevents various SpamAssassin-related memory issues.
#
# parallel_requests = (platform-dependent)

# The maximum number of requests to be handled by the filter before it 
# stops execution. This is useful on platforms where parallel_requests can
# not be used (such as Win32), to cause the filter to exit periodically
# and prevent the memory usage of SpamAssassin from growing without bound.
# A value of 0 causes the filter to handle requests forever (that is, it
# won't exit until it is told to by CommuniGate). If you set this option to
# a positive value, you _must_ set the "Auto-Restart" parameter of the
# CGPSA entry on CommuniGate Pro's "Content Filtering" configuration page
# to something other than "disabled", or your mail queue will stop
# altogether when CGPSA exits. This option can be enabled in conjunction 
# with parallel_requests, but it is not particularly useful to do so.
#
# max_requests = 0

# A simplified mode of operation for the filter. If this setting is "true", 
# the filter uses the default SpamAssassin preferences for all messages and 
# uses the ADDHEADER functionality of CommuniGate to add SpamAssassin 
# headers to the messages it processes. In "headers-only" mode, the 
# settings relating to user preferences and state are completely ignored 
# (only global preferences and state are used), and so are the settings 
# related to the CGP CLI and remote addresses (the CLI is not used, and 
# local and remote addresses are not distinguished). The default setting is 
# "false" - that is, the filter normally runs in "full-featured" mode.
#
# headers_only = false

# A flag that indicates whether or not the CommuniGate Pro CLI should be 
# used. If true, the CLI is used to determine whether recipient addresses 
# are local or remote, and to locate user preferences (if they're being 
# used). If false, the CLI is not used at all, and all settings that depend 
# on it (in particular, those having to do with user prefs and state files) 
# are ignored. The filter then scans messages to all recipients (not just 
# local ones), and uses default preferences and state. The only reason you 
# would ever want to disable CLI usage is if you are running in 
# full-featured mode because you want SpamAssassin to rewrite messages, but 
# you don't want the CLI overhead; if you're running in headers-only mode, 
# CLI usage is disabled automatically regardless of this configuration
# option. The default setting is to use the CLI. 
#
# use_cli = true

# The port to use for the CommuniGate Pro CLI. If you have changed the PWD
# port of your CommuniGate server, you must specify the new port number 
# here. If you haven't changed the PWD port of you CommuniGate server, the
# default setting will work.
#
# cgp_port = 106

# A header that will be added to emails, in addition to the standard
# SpamAssassin headers (if they're enabled), to prevent loops. If you choose 
# to run all email through the filter without performing any tests on its
# content (such as looking for an X-Spam-Status), the filter will still work
# properly because of this. The primary motivation for any change to this
# parameter is aesthetic.
#
# loop_prevention_header = X-TFF-CGPSA-Filter

# A list of domain names, separated by spaces, for which CGPSA should scan
# all email. This is useful in cases where you want CGPSA to use the CLI 
# (which causes it to only scan email for addresses local to the CGP server)
# but also want to perform spam filtering for some non-local domains to 
# which the CGP server relays. The default setting is to not scan mail for
# any specific domain names. An example of a setting to scan all mail 
# destined for the domains tffenterprises.com and tffenterprises.net is
# "scan_domains = tffenterprises.com tffenterprises.net".
#
# scan_domains = 

# A flag that determines whether messages to direct mailbox addresses are
# scanned. If true, messages to a direct mailbox address will be scanned 
# just like messages to regular addresses. If false, messages to direct 
# mailbox addresses will not be scanned (and will instead be delivered to 
# the direct mailbox addresses intact). Local recipients of a message that 
# are not direct mailbox addresses will always be scanned; this setting 
# affects only the direct mailbox addresses. The default is to not scan 
# messages for direct mailbox addresses. 
#
# direct_mailbox_scan = false

# A flag that determines whether or not direct mailbox addresses will be
# rewritten as account details before being scanned. If true, every direct
# mailbox address (mailbox#account) will be converted to an account detail
# (account+mailbox) before scanning - this ensures that it will be processed
# by user-level rules. If false, direct mailbox addresses will be left
# intact. The default is to not rewrite direct mailbox addresses. Note that
# if this setting is true, the setting of "direct_mailbox_scan" is
# effectively ignored (because all rewritten addresses no longer have 
# direct mailbox components, so they are scanned).
#
# direct_mailbox_rewrite = false

# A flag that determines whether debugging output is turned on. If you're
# concerned about speed, it may be (minimally) advantageous to turn
# debugging output off.
#
# debug = true
 
# The debugging level of the filter. This determines how verbose its output
# is, which in turn determines (in concert with CommuniGate's log level) how
# large your CommuniGate logs will be. The valid range is 0-9, where 0 means
# to output as little as possible and 9 means to output as much as possible.
# Currently, only levels 8 and 9 really output anything.
#
# debug_level = 9

# A flag that determines whether SpamAssassin will output debugging
# information to standard error. Turning this on generates a very large 
# amount of output, so it should only be done to gather information when
# problems arise with message processing.
#
# sa_debug = false

# The "default home directory". This is where the systemwide SpamAssassin 
# preferences (inside a ".spamassassin" directory), as well as the helper
# state files (such as razor's logs and config files) will be located. 
# Note that the filter actually uses the values of "$cgp_base" and
# "$config_directory" in place of "/var/CommuniGate/" and "Settings/" in 
# creating the default value for this setting, so if you change those, the 
# value below will no longer accurately reflect the default. This setting 
# should not be quoted (or escaped, if it has spaces). On Win32, the 
# location should have a drive letter and use forward slashes (not 
# backslashes) as separators: for example, C:/CommuniGate Files/SpamAssassin 
#
# default_home_dir = /var/CommuniGate/Settings/SpamAssassin

# A flag that determines whether or not individual user preferences will be
# used if available. Turning this on enables the use of user preferences,
# but since there is no GUI for this currently, there is no compelling 
# reason to use it unless some people with root access want their own
# SpamAssassin preferences. 
#
# use_user_prefs = false

# A flag that determines whether or not individual user preferences are
# required in order to run SpamAssassin. This is an easy way to ensure that
# SpamAssassin is only run for those users that explicitly enable it; 
# SpamAssassin is not run for any user that doesn't have a SpamAssassin 
# prefs file in their account directory when this setting is turned on. 
# It is off by default.
#
# require_user_prefs = false

# A flag that determines whether individual user state files are maintained
# by SpamAssassin. This allows each user to have their own auto-whitelist 
# and Bayes files, and can therefore make SpamAssassin more effective; 
# however, it does mean that more disk space will be used for SpamAssassin
# state.
#
# use_user_state = false

# A flag that determines whether auto-whitelist files will be used. If 
# "use_user_state" is enabled, this will enable individual auto-whitelists;
# if not, it will enable a systemwide auto-whitelist. The auto-whitelist 
# files will be created in the user's CommuniGate account directory if 
# "use_user_state" is enabled, and the default home directory if 
# "use_user_state" is disabled. 
#
# use_auto_whitelist = true

# A flag that determines whether spam tests that depend on the network
# (such as Razor scans and blacklist checks) will be performed. You might
# want to disable this if you find that your messages are taking too long to
# be processed, or if SpamAssassin uses too much bandwidth (or other 
# resources).
#
# do_network_tests = true

# A flag that determines whether SpamAssassin will stop a message scan once
# it hits the spam threshold for that message. You usually won't want to 
# enable this, but it may improve efficiency for very high email traffic.
#
# stop_at_threshold = false

# A flag that determines whether or not CGPSA will use the "C" locale when 
# reading text. When true, the "C" locale is used regardless of what your 
# system locale is; when false, your system locale is used. This should
# help to work around problems that SpamAssassin has with certain locales.
# The default is to always use the "C" locale.
#
# use_c_locale = true

# A flag that determines whether or not CGPSA will direct messages that
# would normally be output on the standard error stream to a file instead.
# This prevents CGPSA from hanging on certain operating systems. Note that
# CGPSA error messages appear in the CommuniGate Pro log (if the filter
# log level is high enough) in addition to this error file, but SpamAssassin 
# error messages never appear in the CommuniGate Pro log. The output appears 
# in the file "cgpsa.err", in the default home directory. The default is to 
# direct error messages to the file (and not standard error).
#
# Note that currently there is no log rotation or other mechanism to keep
# this file from growing without bound. 
#
# redirect_stderr = true

#
# Options Related to SpamAssassin Installation Paths
# (you probably won't need to change these unless you're running Windows)
#

# The prefix where SpamAssassin is installed. This will, on UNIX machines,
# usually be /usr or /usr/local. Do not change this setting unless you are
# having problems with SpamAssassin finding its data files and rule sets
# (as is often reported with SpamAssassin 2.60 on Windows systems). If you
# change this setting, you will most likely want to set it to the value 
# assigned to "my $PREFIX" at the top of the "spamassassin" script on your 
# system.
#
# sa_prefix = <default value is empty>

# The path to SpamAssassin's default rule set. This will, on UNIX machines,
# usually be /usr/share/spamassassin or /usr/local/share/spamassassin. Do 
# not change this setting unless you are having problems with SpamAssassin
# finding its data files and rule sets (as is often reported with
# SpamAssassin 2.60 on Windows systems). If you change this setting, you
# will most likely want to set it to the value assigned to "my 
# $DEFAULT_RULES_DIR" at the top of the "spamassassin" script on your 
# system.
#
# sa_default_rules_dir = <default value is empty>

# The path to SpamAssassin's local rule set. This will, on UNIX machines,
# usually be /etc/mail/spamassassin or /usr/local/etc/mail/spamassassin. Do
# not change this setting unless you are having problems with SpamAssassin
# finding its data files and rule sets (as is often reported with 
# SpamAssassin 2.60 on Windows systems). If you change this setting, you
# will most likely want to set it to the value assigned to "my 
# $LOCAL_RULES_DIR" at the top of the "spamassassin" script on your system.
#
# sa_local_rules_dir = <default value is empty>

# 
# Options Related to SpamAssassin's Helper Applications
# (Razor, Pyzor, DCC, etc.)
#

# A list of directories in which SpamAssassin's helper applications 
# reside. This will usually include components such as "/usr/local/bin"
# or "/usr/bin" (on UNIX-like systems). Separators should be colons on
# UNIX-like systems, and semicolons on Windows systems. For example, 
# "/usr/bin:/usr/local/bin" for UNIX, or "c:/usr/bin;c:/usr/local/bin" 
# for Windows. Note that if you do not specify a helper path, Razor will
# likely still work, but other helper applications, such as Pyzor and DCC,
# will certainly not. 
#
# helper_path = <default value is empty>

# The directory used by SpamAssassin's helper applications to store their 
# state files. By default, this is the same as the default home directory.
#
# helper_state_dir = (default_home_dir)

# 
# Options You Will Almost Certainly Not Want To Change
#

# The hostname to use for the CommuniGate Pro CLI. There's almost no 
# conceivable reason for you to to change this.
#
# cgp_hostname = localhost


# End of Configuration File
